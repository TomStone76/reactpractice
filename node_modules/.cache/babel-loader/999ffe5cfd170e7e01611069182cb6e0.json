{"ast":null,"code":"var _jsxFileName = \"/Users/tomstone/Desktop/reactpractice/src/components/Calculator.js\";\nimport React from \"react\"; // Create a new component named \"Math\"\n// Render one Math component in the place of each \"?\" mark\n// Math should accept 3 props\n// num1, operator, and num2\n// Math should return a span tag displaying the result e.g.  19 + 341 = 360\n\nfunction Math(props) {\n  var value;\n\n  switch (props.operator) {\n    case \"+\":\n      value = props1.num1 + props.num2;\n      break;\n\n    case \"-\":\n      value = props1.num1 - props.num2;\n      break;\n\n    case \"*\":\n      value = props1.num1 * props.num2;\n      break;\n\n    case \"/\":\n      value = props1.num1 / props.num2;\n      break;\n  }\n}\n\nvar Calculator = function Calculator() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"19 + 341 = \", React.createElement(Math, {\n    num1: 19,\n    operator: \"+\",\n    num2: 142,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"42 - 17 = \", React.createElement(Math, {\n    num1: 42,\n    operator: \"-\",\n    num2: 17,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"100 * 3 = ?\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"96 / 4 = ?\"));\n};\n\nexport default Calculator;","map":{"version":3,"sources":["/Users/tomstone/Desktop/reactpractice/src/components/Calculator.js"],"names":["React","Math","props","value","operator","props1","num1","num2","Calculator"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;AACA;AACA;AACA;AACA;;AACA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,MAAIC,KAAJ;;AACA,UAAQD,KAAK,CAACE,QAAd;AACA,SAAK,GAAL;AACED,MAAAA,KAAK,GAAGE,MAAM,CAACC,IAAP,GAAcJ,KAAK,CAACK,IAA5B;AACA;;AACF,SAAK,GAAL;AACEJ,MAAAA,KAAK,GAAGE,MAAM,CAACC,IAAP,GAAcJ,KAAK,CAACK,IAA5B;AACA;;AACF,SAAK,GAAL;AACEJ,MAAAA,KAAK,GAAGE,MAAM,CAACC,IAAP,GAAcJ,KAAK,CAACK,IAA5B;AACA;;AACF,SAAK,GAAL;AACEJ,MAAAA,KAAK,GAAGE,MAAM,CAACC,IAAP,GAAcJ,KAAK,CAACK,IAA5B;AACA;AAZF;AAcD;;AAGD,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,SACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACa,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,EAAZ;AAAgB,IAAA,QAAQ,EAAC,GAAzB;AAA6B,IAAA,IAAI,EAAE,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADb,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACY,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,EAAZ;AAAgB,IAAA,QAAQ,EAAC,GAAzB;AAA6B,IAAA,IAAI,EAAE,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADZ,CAJF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,CADiB;AAAA,CAAnB;;AAiBA,eAAeA,UAAf","sourcesContent":["import React from \"react\";\n\n// Create a new component named \"Math\"\n// Render one Math component in the place of each \"?\" mark\n// Math should accept 3 props\n// num1, operator, and num2\n// Math should return a span tag displaying the result e.g.  19 + 341 = 360\nfunction Math(props) {\n  let value;\n  switch (props.operator) {\n  case \"+\":\n    value = props1.num1 + props.num2;\n    break;\n  case \"-\":\n    value = props1.num1 - props.num2;\n    break;\n  case \"*\":\n    value = props1.num1 * props.num2;\n    break;\n  case \"/\":\n    value = props1.num1 / props.num2;\n    break;\n  }\n}\n\n\nconst Calculator = () => (\n  <div>\n    <p>\n      19 + 341 = <Math num1={19} operator=\"+\" num2={142} />\n    </p>\n    <p>\n      42 - 17 = <Math num1={42} operator=\"-\" num2={17} />\n    </p>\n    <p>\n      100 * 3 = ?\n    </p>\n    <p>\n      96 / 4 = ?\n    </p>\n  </div>\n);\n\nexport default Calculator;\n"]},"metadata":{},"sourceType":"module"}